name: Update install_golang Gist

# This workflow is triggered on a schedule and can also be manually triggered from the Actions tab.
on:
  push:
    branches:
      - '*'
  # The workflow runs every 6 hours.
  schedule:
    - cron: "0 */6 * * *"
  # This allows the workflow to be run manually from the Actions tab.
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GIST_ID: ${{ secrets.INSTALL_GOLANG_GIST_ID }}

jobs:
  check_for_new_version:
    runs-on: ubuntu-latest
    outputs:
      CURRENT_GO_VERSION: ${{ steps.current_version.outputs.CURRENT_GO_VERSION }}
      LATEST_GO_VERSION: ${{ steps.latest_version.outputs.LATEST_GO_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Get current version
        id: current_version
        if: ${{ success()}}
        run: echo "CURRENT_GO_VERSION=$(python update_install_golang_gist.py get_current_version)" >> "$GITHUB_OUTPUT"
      - name: Upload currently used GO version file
        uses: actions/upload-artifact@v4
        with:
          name: current_go_version
          path: current_go_version.txt

      - name: Get latest version
        id: latest_version
        if: ${{ success()}}
        run: echo "LATEST_GO_VERSION=$(python update_install_golang_gist.py get_latest_version)" >> "$GITHUB_OUTPUT"
      - name: Upload latest GO version file
        uses: actions/upload-artifact@v4
        with:
          name: latest_go_version
          path: latest_go_version.txt
  update_gist:
    runs-on: ubuntu-latest
    needs: check_for_new_version
    if: ${{ needs.check_for_new_version.result == 'success' }} && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: Get versions
        id: get_versions
        run: echo "CURRENT_GO_VERSION=$(cat current_go_version.txt)" >> "$GITHUB_OUTPUT" && echo "LATEST_GO_VERSION=$(cat latest_go_version.txt)" >> "$GITHUB_OUTPUT"
      - name: Update Gist
        run: python update_install_golang_gist.py update_gist
        if: ${{ success()}} && steps.get_versions.outputs.CURRENT_GO_VERSION != step.get_versions.outputs.LATEST_GO_VERSION && github.ref == 'refs/heads/main'
        env:
          CURRENT_GO_VERSION: ${{ steps.get_versions.outputs.CURRENT_GO_VERSION }}
          LATEST_GO_VERSION: ${{  steps.get_versions.outputs.LATEST_GO_VERSION }}
